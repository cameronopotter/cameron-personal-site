# Digital Greenhouse Pre-commit Configuration
# Ensures code quality and consistency before commits

repos:
  # General hooks
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: trailing-whitespace
        exclude: '\.md$'
      - id: end-of-file-fixer
      - id: check-yaml
        args: ['--unsafe']
      - id: check-json
        exclude: 'tsconfig\.json$'
      - id: check-toml
      - id: check-merge-conflict
      - id: check-case-conflict
      - id: check-added-large-files
        args: ['--maxkb=1000']
      - id: check-symlinks
      - id: destroyed-symlinks
      - id: mixed-line-ending
        args: ['--fix=lf']
      - id: fix-byte-order-marker

  # Python/Backend hooks
  - repo: https://github.com/psf/black
    rev: 23.12.1
    hooks:
      - id: black
        files: '^backend/.*\.py$'
        args: [--line-length=88, --target-version=py311]

  - repo: https://github.com/charliermarsh/ruff-pre-commit
    rev: v0.1.9
    hooks:
      - id: ruff
        files: '^backend/.*\.py$'
        args: [--fix, --exit-non-zero-on-fix]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        files: '^backend/.*\.py$'
        additional_dependencies: [types-all]
        args: [--config-file=backend/pyproject.toml]

  # TypeScript/Frontend hooks
  - repo: local
    hooks:
      - id: eslint-frontend
        name: ESLint (Frontend)
        entry: bash -c 'cd frontend && npm run lint -- --fix'
        language: system
        files: '^frontend/src/.*\.(js|jsx|ts|tsx)$'
        pass_filenames: false

      - id: prettier-frontend
        name: Prettier (Frontend)
        entry: bash -c 'cd frontend && npm run format'
        language: system
        files: '^frontend/.*\.(js|jsx|ts|tsx|css|md|json)$'
        pass_filenames: false

      - id: typescript-check
        name: TypeScript Check
        entry: bash -c 'cd frontend && npx tsc --noEmit'
        language: system
        files: '^frontend/.*\.(ts|tsx)$'
        pass_filenames: false

  # Security and dependency checks
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.4.0
    hooks:
      - id: detect-secrets
        args: ['--baseline', '.secrets.baseline']
        exclude: '\.lock$|package-lock\.json$'

  - repo: https://github.com/gitguardian/ggshield
    rev: v1.25.0
    hooks:
      - id: ggshield
        language: python
        stages: [commit]

  # Docker and Infrastructure
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: [--ignore, DL3008, --ignore, DL3009]

  # Documentation
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.38.0
    hooks:
      - id: markdownlint
        args: [--fix]
        exclude: 'node_modules|\.github'

  # Database migrations (if using Alembic)
  - repo: local
    hooks:
      - id: alembic-check
        name: Check Alembic migrations
        entry: bash -c 'cd backend && python -m alembic check'
        language: system
        files: '^backend/alembic/versions/.*\.py$'
        pass_filenames: false

  # Test hooks
  - repo: local
    hooks:
      - id: pytest-check
        name: Run fast tests
        entry: bash -c 'cd backend && python -m pytest tests/unit -x --tb=short'
        language: system
        files: '^backend/(app|tests)/.*\.py$'
        pass_filenames: false

      - id: frontend-unit-tests
        name: Run frontend unit tests
        entry: bash -c 'cd frontend && npm run test -- run --reporter=basic'
        language: system
        files: '^frontend/src/.*\.(ts|tsx)$'
        pass_filenames: false

  # Performance and bundle size checks
  - repo: local
    hooks:
      - id: bundle-size-check
        name: Check bundle size
        entry: bash -c 'cd frontend && npm run build && node scripts/check-bundle-size.js'
        language: system
        files: '^frontend/(src|public)/.*$'
        pass_filenames: false
        stages: [manual]

# Global configuration
default_language_version:
  python: python3.11
  node: system

# Execution settings
fail_fast: false
default_stages: [commit]

# Exclude patterns
exclude: |
  (?x)^(
    .*\.min\.(js|css)|
    .*\.map|
    node_modules/.*|
    \.git/.*|
    dist/.*|
    build/.*|
    coverage/.*|
    \.pytest_cache/.*|
    \.mypy_cache/.*|
    \.vscode/.*|
    \.idea/.*|
    __pycache__/.*|
    .*\.pyc|
    test-results/.*|
    playwright-report/.*
  )$

# CI configuration
ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false